import React, { useState, useEffect } from "react";

const currencyRates = {
  USD: 1,
  EUR: 0.9,
  KRW: 1300,
  INR: 83,
};

const currencies = Object.keys(currencyRates);

export default function App() {
  const [step, setStep] = useState("create"); // create or join
  const [bill, setBill] = useState(null);
  const [participants, setParticipants] = useState({});

  const [total, setTotal] = useState("");
  const [peopleCount, setPeopleCount] = useState(2);

  const [name, setName] = useState("");
  const [currency, setCurrency] = useState("USD");

  // Key for localStorage: unique per bill ID + name
  const storageKey = bill && name ? `splitzy_${bill.id}_${name}` : null;

  useEffect(() => {
    if (storageKey) {
      const saved = localStorage.getItem(storageKey);
      if (saved) {
        const paid = JSON.parse(saved);
        setParticipants((prev) => ({ ...prev, [name]: paid }));
      }
    }
  }, [storageKey, name]);

  function createBill() {
    if (!total || !peopleCount || peopleCount < 1) {
      alert("Please enter a valid total and number of people");
      return;
    }
    const id = Math.random().toString(36).slice(2, 9);
    const perPerson = (parseFloat(total) / peopleCount).toFixed(2);
    setBill({ id, total: parseFloat(total), peopleCount, perPerson });
    setParticipants({});
    setStep("join");
  }

  function pay() {
    if (!name) {
      alert("Please enter your name");
      return;
    }
    setParticipants((prev) => {
      const newParticipants = { ...prev, [name]: { paid: true, currency } };
      localStorage.setItem(storageKey, JSON.stringify(newParticipants[name]));
      return newParticipants;
    });
  }

  const paidCount = Object.values(participants).filter((p) => p.paid).length;

  return (
    <div
      style={{
        maxWidth: 480,
        margin: "20px auto",
        fontFamily: "Arial, sans-serif",
        padding: 20,
      }}
    >
      <h1 style={{ textAlign: "center", color: "#4B0082" }}>Splitzy</h1>

      {step === "create" && (
        <div
          style={{
            backgroundColor: "#f0f0f0",
            padding: 20,
            borderRadius: 8,
          }}
        >
          <h2>Create a new bill</h2>
          <input
            type="number"
            placeholder="Total Amount (USD)"
            value={total}
            onChange={(e) => setTotal(e.target.value)}
            style={{ width: "100%", padding: 8, marginBottom: 10 }}
          />
          <input
            type="number"
            placeholder="Number of People"
            min="1"
            value={peopleCount}
            onChange={(e) => setPeopleCount(e.target.value)}
            style={{ width: "100%", padding: 8, marginBottom: 10 }}
          />
          <button
            onClick={createBill}
            style={{
              width: "100%",
              backgroundColor: "#4B0082",
              color: "white",
              padding: 10,
              border: "none",
              borderRadius: 4,
              cursor: "pointer",
              fontWeight: "bold",
            }}
          >
            Create Bill
          </button>
        </div>
      )}

      {step === "join" && bill && (
        <div
          style={{
            backgroundColor: "#e6ffe6",
            padding: 20,
            borderRadius: 8,
          }}
        >
          <h2>Bill #{bill.id}</h2>
          <p>
            Total: <b>${bill.total.toFixed(2)} USD</b>
          </p>
          <p>
            Split between <b>{bill.peopleCount}</b> people
          </p>
          <p>
            Per person: <b>${bill.perPerson} USD</b>
          </p>
          <p style={{ fontSize: 12, color: "#555" }}>
            Share this URL with your friends to join: <code>{window.location.href}</code>
          </p>

          <input
            type="text"
            placeholder="Your name"
            value={name}
            onChange={(e) => setName(e.target.value)}
            style={{ width: "100%", padding: 8, marginBottom: 10 }}
          />
          <select
            value={currency}
            onChange={(e) => setCurrency(e.target.value)}
            style={{ width: "100%", padding: 8, marginBottom: 10 }}
          >
            {currencies.map((c) => (
              <option key={c} value={c}>
                {c}
              </option>
            ))}
          </select>
          <p>
            You need to pay:{" "}
            <b>{(bill.perPerson * currencyRates[currency]).toFixed(2)} {currency}</b>
          </p>
          <button
            onClick={pay}
            disabled={participants[name]?.paid}
            style={{
              width: "100%",
              backgroundColor: participants[name]?.paid ? "#999" : "#28a745",
              color: "white",
              padding: 10,
              border: "none",
              borderRadius: 4,
              cursor: participants[name]?.paid ? "default" : "pointer",
              fontWeight: "bold",
            }}
          >
            {participants[name]?.paid ? "Paid" : "Mark as Paid"}
          </button>

          <h3>
            Participants ({paidCount} / {bill.peopleCount} paid):
          </h3>
          <ul>
            {Object.entries(participants).map(([pName, data]) => (
              <li
                key={pName}
                style={{ color: data.paid ? "green" : "red" }}
              >
                {pName}: {data.paid ? "‚úÖ Paid" : "‚ùå Not paid"} ({data.currency})
              </li>
            ))}
          </ul>

          {paidCount === bill.peopleCount && (
            <p style={{ marginTop: 20, color: "green", fontWeight: "bold" }}>
              All paid! üéâ
            </p>
          )}
        </div>
      )}
    </div>
  );
}
